name: Build Windows

on:
  repository_dispatch:
  push:
  # schedule: 
  #   - cron: '0 0 * * *'

jobs:
  build:
    runs-on: 'windows-2019'
    steps:
    - name: Checkout rpi-imager
      uses: actions/checkout@v2
    - name: install msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw32
        install: >-
          mingw-w64-i686-openssl
          make
          perl
        location: C:\msys2
    - name: üÜï Upgrade aqtinstall
      run: |
          pip install --upgrade aqtinstall
      shell: cmd
    - name: ü©π Patch CMakeLists.txt
      shell: msys2 {0}
      run: |
          cd src
          echo "Adding inlcude lines and lib lines on our own"
          sed -n -i 'p;290a set(OPENSSL_INCLUDE_DIR "C:/msys2/msys64/mingw32/include")' CMakeLists.txt
          
          echo "Adding inlcude lines and lib lines on our own"
          sed -n -i 'p;290a set(OPENSSL_LIBRARIES "C:/msys2/msys64/mingw32/lib/libssl.a" "C:/msys2/msys64/mingw32/lib/libcrypto.a")' CMakeLists.txt
          
          echo "Patching remove openssl find"
          sed -i 's/find_package(OpenSSL REQUIRED)//g' CMakeLists.txt
          
          echo "Remove signtool"
          sed -i  's@find_program(SIGNTOOL "signtool.exe" PATHS "c:/Program Files (x86)/Microsoft SDKs/ClickOnce/SignTool")@@g' CMakeLists.txt
          sed -i  's@if (NOT SIGNTOOL)@@g' CMakeLists.txt
          sed -i  's@message(FATAL_ERROR "Unable to locate signtool.exe used for code signing")\n    endif()@@g' CMakeLists.txt
          sed -i -e '/message(FATAL_ERROR "Unable to locate signtool.exe used for code signing")/{N;s/    endif()//}' CMakeLists.txt
          sed -i 's/message(FATAL_ERROR "Unable to locate signtool.exe used for code signing")//' CMakeLists.txt
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win32_mingw81'
        # Tools format is name,version,variant tools are listed here: https://download.qt.io/online/qtsdkrepository/windows_x86/desktop/
        tools: 'tools_cmake,3.21.1,qt.tools.cmake.win64 tools_mingw,8.1.0,qt.tools.win32_mingw810 tools_ninja,1.10.2,qt.tools.ninja'
        install-deps: 'true'
        setup-python: 'true'
        cached: 'false'
        dir: ${{ github.workspace }}/qt/
    - name: Copy OpenSSL Dlls
      shell: cmd
      run: |
          echo "Adding inlcude lines and lib lines on our own"
          copy  C:\msys2\msys64\mingw32\bin\libssl-1_1.dll D:\a\pi-imager\pi-imager\qt\Qt\5.15.2\mingw81_32\bin
          copy  C:\msys2\msys64\mingw32\bin\libcrypto-1_1.dll D:\a\pi-imager\pi-imager\qt\Qt\5.15.2\mingw81_32\bin
    - name: üèóÔ∏è Configure and build on windows
      env:
        QT_VERSION: '5.15.2'
      shell: cmd
      run: |

          dir "D:\a\pi-imager\pi-imager\qt\Qt"
          
          echo "tools"
          dir "D:\a\pi-imager\pi-imager\qt\Qt\Tools"
          
          dir "C:\msys2\msys64\mingw32"
          
          echo "openssl version:"
          C:\msys2\msys64\mingw32\bin\openssl version
          
          
          echo "clean up some paths"
          
          set PATH=D:\a\pi-imager\pi-imager\qt\Qt\5.15.2\mingw81_32\bin;D:\a\pi-imager\pi-imager\qt\Qt\Tools\CMake_64\bin;D:\a\pi-imager\pi-imager\qt\Qt\Tools;D:\a\pi-imager\pi-imager\qt\Qt\Tools\mingw810_32\bin;D:\a\pi-imager\pi-imager\qt\Qt\Tools\Ninja;C:\Windows\system32
          
          echo "current path":
          echo %path%
          
          echo "cmake version:"
          cmake --version

          
          echo "Let's build"
          cd src
          mkdir build
          cd build
          cmake -G Ninja ..
          cmake --build .
          
          dir
          
    - uses: actions/upload-artifact@v1
      with:
        name: pi-imager-windows
        path: ${{ github.workspace }}\src\build\deploy
